%% Import data from text file
% Script for importing data from the following text file:
%
%    filename: /Users/DCO/Downloads/dohnemus_20210730_135606_qI0K2.txt
%
% Auto-generated by MATLAB on 30-Jul-2021 18:58:43

%% Set up the Import Options and import the data
opts = delimitedTextImportOptions("NumVariables", 932);

% Specify range and delimiter
opts.DataLines = [2, Inf];
opts.Delimiter = ",";

% Specify column names and types
opts.VariableNames = ["Dataset", "SiteCode", "POC", "Date", "AuxID", "SiteName", "Latitude", "Longitude", "Elevation", "State", "CountyFIPS", "EPACode", "ALfVal", "ALfUnit", "ALfStatus", "ALfObjectiveCode", "ALfModuleTypeCode", "ALfUnc", "ALfMDL", "ALfVal3", "NH4fVal", "NH4fUnit", "NH4fStatus", "NH4fObjectiveCode", "NH4fModuleTypeCode", "NH4fUnc", "NH4fMDL", "NH4fVal3", "ammNO3fVal", "ammNO3fUnit", "ammNO3fStatus", "ammNO3fObjectiveCode", "ammNO3fModuleTypeCode", "ammNO3fUnc", "ammNO3fMDL", "ammNO3fVal3", "ammSO4fVal", "ammSO4fUnit", "ammSO4fStatus", "ammSO4fObjectiveCode", "ammSO4fModuleTypeCode", "ammSO4fUnc", "ammSO4fMDL", "ammSO4fVal3", "ASfVal", "ASfUnit", "ASfStatus", "ASfObjectiveCode", "ASfModuleTypeCode", "ASfUnc", "ASfMDL", "ASfVal3", "BRfVal", "BRfUnit", "BRfStatus", "BRfObjectiveCode", "BRfModuleTypeCode", "BRfUnc", "BRfMDL", "BRfVal3", "CAfVal", "CAfUnit", "CAfStatus", "CAfObjectiveCode", "CAfModuleTypeCode", "CAfUnc", "CAfMDL", "CAfVal3", "EC1fVal", "EC1fUnit", "EC1fStatus", "EC1fObjectiveCode", "EC1fModuleTypeCode", "EC1fUnc", "EC1fMDL", "EC1fVal3", "EC2fVal", "EC2fUnit", "EC2fStatus", "EC2fObjectiveCode", "EC2fModuleTypeCode", "EC2fUnc", "EC2fMDL", "EC2fVal3", "EC3fVal", "EC3fUnit", "EC3fStatus", "EC3fObjectiveCode", "EC3fModuleTypeCode", "EC3fUnc", "EC3fMDL", "EC3fVal3", "ECfVal", "ECfUnit", "ECfStatus", "ECfObjectiveCode", "ECfModuleTypeCode", "ECfUnc", "ECfMDL", "ECfVal3", "EC_UCDVal", "EC_UCDUnit", "EC_UCDStatus", "EC_UCDObjectiveCode", "EC_UCDModuleTypeCode", "EC_UCDUnc", "EC_UCDMDL", "EC_UCDVal3", "OC1fVal", "OC1fUnit", "OC1fStatus", "OC1fObjectiveCode", "OC1fModuleTypeCode", "OC1fUnc", "OC1fMDL", "OC1fVal3", "OC2fVal", "OC2fUnit", "OC2fStatus", "OC2fObjectiveCode", "OC2fModuleTypeCode", "OC2fUnc", "OC2fMDL", "OC2fVal3", "OC3fVal", "OC3fUnit", "OC3fStatus", "OC3fObjectiveCode", "OC3fModuleTypeCode", "OC3fUnc", "OC3fMDL", "OC3fVal3", "OC4fVal", "OC4fUnit", "OC4fStatus", "OC4fObjectiveCode", "OC4fModuleTypeCode", "OC4fUnc", "OC4fMDL", "OC4fVal3", "OMCfVal", "OMCfUnit", "OMCfStatus", "OMCfObjectiveCode", "OMCfModuleTypeCode", "OMCfUnc", "OMCfMDL", "OMCfVal3", "OPfVal", "OPfUnit", "OPfStatus", "OPfObjectiveCode", "OPfModuleTypeCode", "OPfUnc", "OPfMDL", "OPfVal3", "OPTfVal", "OPTfUnit", "OPTfStatus", "OPTfObjectiveCode", "OPTfModuleTypeCode", "OPTfUnc", "OPTfMDL", "OPTfVal3", "OCfVal", "OCfUnit", "OCfStatus", "OCfObjectiveCode", "OCfModuleTypeCode", "OCfUnc", "OCfMDL", "OCfVal3", "OC_UCDVal", "OC_UCDUnit", "OC_UCDStatus", "OC_UCDObjectiveCode", "OC_UCDModuleTypeCode", "OC_UCDUnc", "OC_UCDMDL", "OC_UCDVal3", "TCfVal", "TCfUnit", "TCfStatus", "TCfObjectiveCode", "TCfModuleTypeCode", "TCfUnc", "TCfMDL", "TCfVal3", "CHLfVal", "CHLfUnit", "CHLfStatus", "CHLfObjectiveCode", "CHLfModuleTypeCode", "CHLfUnc", "CHLfMDL", "CHLfVal3", "CLfVal", "CLfUnit", "CLfStatus", "CLfObjectiveCode", "CLfModuleTypeCode", "CLfUnc", "CLfMDL", "CLfVal3", "CRfVal", "CRfUnit", "CRfStatus", "CRfObjectiveCode", "CRfModuleTypeCode", "CRfUnc", "CRfMDL", "CRfVal3", "CUfVal", "CUfUnit", "CUfStatus", "CUfObjectiveCode", "CUfModuleTypeCode", "CUfUnc", "CUfMDL", "CUfVal3", "fAbsVal", "fAbsUnit", "fAbsStatus", "fAbsObjectiveCode", "fAbsModuleTypeCode", "fAbsUnc", "fAbsMDL", "fAbsVal3", "fAbs_HIPSVal", "fAbs_HIPSUnit", "fAbs_HIPSStatus", "fAbs_HIPSObjectiveCode", "fAbs_HIPSModuleTypeCode", "fAbs_HIPSUnc", "fAbs_HIPSMDL", "fAbs_HIPSVal3", "fAbs_LIPMVal", "fAbs_LIPMUnit", "fAbs_LIPMStatus", "fAbs_LIPMObjectiveCode", "fAbs_LIPMModuleTypeCode", "fAbs_LIPMUnc", "fAbs_LIPMMDL", "fAbs_LIPMVal3", "RefF_405Val", "RefF_405Unit", "RefF_405Status", "RefF_405ObjectiveCode", "RefF_405ModuleTypeCode", "RefF_405Unc", "RefF_405MDL", "RefF_405Val3", "RefF_445Val", "RefF_445Unit", "RefF_445Status", "RefF_445ObjectiveCode", "RefF_445ModuleTypeCode", "RefF_445Unc", "RefF_445MDL", "RefF_445Val3", "RefF_532Val", "RefF_532Unit", "RefF_532Status", "RefF_532ObjectiveCode", "RefF_532ModuleTypeCode", "RefF_532Unc", "RefF_532MDL", "RefF_532Val3", "RefF_635Val", "RefF_635Unit", "RefF_635Status", "RefF_635ObjectiveCode", "RefF_635ModuleTypeCode", "RefF_635Unc", "RefF_635MDL", "RefF_635Val3", "RefF_780Val", "RefF_780Unit", "RefF_780Status", "RefF_780ObjectiveCode", "RefF_780ModuleTypeCode", "RefF_780Unc", "RefF_780MDL", "RefF_780Val3", "RefF_808Val", "RefF_808Unit", "RefF_808Status", "RefF_808ObjectiveCode", "RefF_808ModuleTypeCode", "RefF_808Unc", "RefF_808MDL", "RefF_808Val3", "RefF_980Val", "RefF_980Unit", "RefF_980Status", "RefF_980ObjectiveCode", "RefF_980ModuleTypeCode", "RefF_980Unc", "RefF_980MDL", "RefF_980Val3", "TransF_405Val", "TransF_405Unit", "TransF_405Status", "TransF_405ObjectiveCode", "TransF_405ModuleTypeCode", "TransF_405Unc", "TransF_405MDL", "TransF_405Val3", "TransF_445Val", "TransF_445Unit", "TransF_445Status", "TransF_445ObjectiveCode", "TransF_445ModuleTypeCode", "TransF_445Unc", "TransF_445MDL", "TransF_445Val3", "TransF_532Val", "TransF_532Unit", "TransF_532Status", "TransF_532ObjectiveCode", "TransF_532ModuleTypeCode", "TransF_532Unc", "TransF_532MDL", "TransF_532Val3", "TransF_635Val", "TransF_635Unit", "TransF_635Status", "TransF_635ObjectiveCode", "TransF_635ModuleTypeCode", "TransF_635Unc", "TransF_635MDL", "TransF_635Val3", "TransF_780Val", "TransF_780Unit", "TransF_780Status", "TransF_780ObjectiveCode", "TransF_780ModuleTypeCode", "TransF_780Unc", "TransF_780MDL", "TransF_780Val3", "TransF_808Val", "TransF_808Unit", "TransF_808Status", "TransF_808ObjectiveCode", "TransF_808ModuleTypeCode", "TransF_808Unc", "TransF_808MDL", "TransF_808Val3", "TransF_980Val", "TransF_980Unit", "TransF_980Status", "TransF_980ObjectiveCode", "TransF_980ModuleTypeCode", "TransF_980Unc", "TransF_980MDL", "TransF_980Val3", "FlowRateVal", "FlowRateUnit", "FlowRateStatus", "FlowRateObjectiveCode", "FlowRateModuleTypeCode", "FlowRateUnc", "FlowRateMDL", "FlowRateVal3", "HfVal", "HfUnit", "HfStatus", "HfObjectiveCode", "HfModuleTypeCode", "HfUnc", "HfMDL", "HfVal3", "RefI_405Val", "RefI_405Unit", "RefI_405Status", "RefI_405ObjectiveCode", "RefI_405ModuleTypeCode", "RefI_405Unc", "RefI_405MDL", "RefI_405Val3", "RefI_445Val", "RefI_445Unit", "RefI_445Status", "RefI_445ObjectiveCode", "RefI_445ModuleTypeCode", "RefI_445Unc", "RefI_445MDL", "RefI_445Val3", "RefI_532Val", "RefI_532Unit", "RefI_532Status", "RefI_532ObjectiveCode", "RefI_532ModuleTypeCode", "RefI_532Unc", "RefI_532MDL", "RefI_532Val3", "RefI_635Val", "RefI_635Unit", "RefI_635Status", "RefI_635ObjectiveCode", "RefI_635ModuleTypeCode", "RefI_635Unc", "RefI_635MDL", "RefI_635Val3", "RefI_780Val", "RefI_780Unit", "RefI_780Status", "RefI_780ObjectiveCode", "RefI_780ModuleTypeCode", "RefI_780Unc", "RefI_780MDL", "RefI_780Val3", "RefI_808Val", "RefI_808Unit", "RefI_808Status", "RefI_808ObjectiveCode", "RefI_808ModuleTypeCode", "RefI_808Unc", "RefI_808MDL", "RefI_808Val3", "RefI_980Val", "RefI_980Unit", "RefI_980Status", "RefI_980ObjectiveCode", "RefI_980ModuleTypeCode", "RefI_980Unc", "RefI_980MDL", "RefI_980Val3", "TransI_405Val", "TransI_405Unit", "TransI_405Status", "TransI_405ObjectiveCode", "TransI_405ModuleTypeCode", "TransI_405Unc", "TransI_405MDL", "TransI_405Val3", "TransI_445Val", "TransI_445Unit", "TransI_445Status", "TransI_445ObjectiveCode", "TransI_445ModuleTypeCode", "TransI_445Unc", "TransI_445MDL", "TransI_445Val3", "TransI_532Val", "TransI_532Unit", "TransI_532Status", "TransI_532ObjectiveCode", "TransI_532ModuleTypeCode", "TransI_532Unc", "TransI_532MDL", "TransI_532Val3", "TransI_635Val", "TransI_635Unit", "TransI_635Status", "TransI_635ObjectiveCode", "TransI_635ModuleTypeCode", "TransI_635Unc", "TransI_635MDL", "TransI_635Val3", "TransI_780Val", "TransI_780Unit", "TransI_780Status", "TransI_780ObjectiveCode", "TransI_780ModuleTypeCode", "TransI_780Unc", "TransI_780MDL", "TransI_780Val3", "TransI_808Val", "TransI_808Unit", "TransI_808Status", "TransI_808ObjectiveCode", "TransI_808ModuleTypeCode", "TransI_808Unc", "TransI_808MDL", "TransI_808Val3", "TransI_980Val", "TransI_980Unit", "TransI_980Status", "TransI_980ObjectiveCode", "TransI_980ModuleTypeCode", "TransI_980Unc", "TransI_980MDL", "TransI_980Val3", "FEfVal", "FEfUnit", "FEfStatus", "FEfObjectiveCode", "FEfModuleTypeCode", "FEfUnc", "FEfMDL", "FEfVal3", "PBfVal", "PBfUnit", "PBfStatus", "PBfObjectiveCode", "PBfModuleTypeCode", "PBfUnc", "PBfMDL", "PBfVal3", "MGfVal", "MGfUnit", "MGfStatus", "MGfObjectiveCode", "MGfModuleTypeCode", "MGfUnc", "MGfMDL", "MGfVal3", "MNfVal", "MNfUnit", "MNfStatus", "MNfObjectiveCode", "MNfModuleTypeCode", "MNfUnc", "MNfMDL", "MNfVal3", "MTVal", "MTUnit", "MTStatus", "MTObjectiveCode", "MTModuleTypeCode", "MTUnc", "MTMDL", "MTVal3", "RCTMVal", "RCTMUnit", "RCTMStatus", "RCTMObjectiveCode", "RCTMModuleTypeCode", "RCTMUnc", "RCTMMDL", "RCTMVal3", "MFVal", "MFUnit", "MFStatus", "MFObjectiveCode", "MFModuleTypeCode", "MFUnc", "MFMDL", "MFVal3", "CM_calculatedVal", "CM_calculatedUnit", "CM_calculatedStatus", "CM_calculatedObjectiveCode", "CM_calculatedModuleTypeCode", "CM_calculatedUnc", "CM_calculatedMDL", "CM_calculatedVal3", "RCFMVal", "RCFMUnit", "RCFMStatus", "RCFMObjectiveCode", "RCFMModuleTypeCode", "RCFMUnc", "RCFMMDL", "RCFMVal3", "RefM_405Val", "RefM_405Unit", "RefM_405Status", "RefM_405ObjectiveCode", "RefM_405ModuleTypeCode", "RefM_405Unc", "RefM_405MDL", "RefM_405Val3", "RefM_445Val", "RefM_445Unit", "RefM_445Status", "RefM_445ObjectiveCode", "RefM_445ModuleTypeCode", "RefM_445Unc", "RefM_445MDL", "RefM_445Val3", "RefM_532Val", "RefM_532Unit", "RefM_532Status", "RefM_532ObjectiveCode", "RefM_532ModuleTypeCode", "RefM_532Unc", "RefM_532MDL", "RefM_532Val3", "RefM_635Val", "RefM_635Unit", "RefM_635Status", "RefM_635ObjectiveCode", "RefM_635ModuleTypeCode", "RefM_635Unc", "RefM_635MDL", "RefM_635Val3", "RefM_780Val", "RefM_780Unit", "RefM_780Status", "RefM_780ObjectiveCode", "RefM_780ModuleTypeCode", "RefM_780Unc", "RefM_780MDL", "RefM_780Val3", "RefM_808Val", "RefM_808Unit", "RefM_808Status", "RefM_808ObjectiveCode", "RefM_808ModuleTypeCode", "RefM_808Unc", "RefM_808MDL", "RefM_808Val3", "RefM_980Val", "RefM_980Unit", "RefM_980Status", "RefM_980ObjectiveCode", "RefM_980ModuleTypeCode", "RefM_980Unc", "RefM_980MDL", "RefM_980Val3", "TransM_405Val", "TransM_405Unit", "TransM_405Status", "TransM_405ObjectiveCode", "TransM_405ModuleTypeCode", "TransM_405Unc", "TransM_405MDL", "TransM_405Val3", "TransM_445Val", "TransM_445Unit", "TransM_445Status", "TransM_445ObjectiveCode", "TransM_445ModuleTypeCode", "TransM_445Unc", "TransM_445MDL", "TransM_445Val3", "TransM_532Val", "TransM_532Unit", "TransM_532Status", "TransM_532ObjectiveCode", "TransM_532ModuleTypeCode", "TransM_532Unc", "TransM_532MDL", "TransM_532Val3", "TransM_635Val", "TransM_635Unit", "TransM_635Status", "TransM_635ObjectiveCode", "TransM_635ModuleTypeCode", "TransM_635Unc", "TransM_635MDL", "TransM_635Val3", "TransM_780Val", "TransM_780Unit", "TransM_780Status", "TransM_780ObjectiveCode", "TransM_780ModuleTypeCode", "TransM_780Unc", "TransM_780MDL", "TransM_780Val3", "TransM_808Val", "TransM_808Unit", "TransM_808Status", "TransM_808ObjectiveCode", "TransM_808ModuleTypeCode", "TransM_808Unc", "TransM_808MDL", "TransM_808Val3", "TransM_980Val", "TransM_980Unit", "TransM_980Status", "TransM_980ObjectiveCode", "TransM_980ModuleTypeCode", "TransM_980Unc", "TransM_980MDL", "TransM_980Val3", "MOfVal", "MOfUnit", "MOfStatus", "MOfObjectiveCode", "MOfModuleTypeCode", "MOfUnc", "MOfMDL", "MOfVal3", "NIfVal", "NIfUnit", "NIfStatus", "NIfObjectiveCode", "NIfModuleTypeCode", "NIfUnc", "NIfMDL", "NIfVal3", "NO3fVal", "NO3fUnit", "NO3fStatus", "NO3fObjectiveCode", "NO3fModuleTypeCode", "NO3fUnc", "NO3fMDL", "NO3fVal3", "N2fVal", "N2fUnit", "N2fStatus", "N2fObjectiveCode", "N2fModuleTypeCode", "N2fUnc", "N2fMDL", "N2fVal3", "OP405TRVal", "OP405TRUnit", "OP405TRStatus", "OP405TRObjectiveCode", "OP405TRModuleTypeCode", "OP405TRUnc", "OP405TRMDL", "OP405TRVal3", "OP445TRVal", "OP445TRUnit", "OP445TRStatus", "OP445TRObjectiveCode", "OP445TRModuleTypeCode", "OP445TRUnc", "OP445TRMDL", "OP445TRVal3", "OP532TRVal", "OP532TRUnit", "OP532TRStatus", "OP532TRObjectiveCode", "OP532TRModuleTypeCode", "OP532TRUnc", "OP532TRMDL", "OP532TRVal3", "OP780TRVal", "OP780TRUnit", "OP780TRStatus", "OP780TRObjectiveCode", "OP780TRModuleTypeCode", "OP780TRUnc", "OP780TRMDL", "OP780TRVal3", "OP808TRVal", "OP808TRUnit", "OP808TRStatus", "OP808TRObjectiveCode", "OP808TRModuleTypeCode", "OP808TRUnc", "OP808TRMDL", "OP808TRVal3", "OP980TRVal", "OP980TRUnit", "OP980TRStatus", "OP980TRObjectiveCode", "OP980TRModuleTypeCode", "OP980TRUnc", "OP980TRMDL", "OP980TRVal3", "OP405TTVal", "OP405TTUnit", "OP405TTStatus", "OP405TTObjectiveCode", "OP405TTModuleTypeCode", "OP405TTUnc", "OP405TTMDL", "OP405TTVal3", "OP445TTVal", "OP445TTUnit", "OP445TTStatus", "OP445TTObjectiveCode", "OP445TTModuleTypeCode", "OP445TTUnc", "OP445TTMDL", "OP445TTVal3", "OP532TTVal", "OP532TTUnit", "OP532TTStatus", "OP532TTObjectiveCode", "OP532TTModuleTypeCode", "OP532TTUnc", "OP532TTMDL", "OP532TTVal3", "OP780TTVal", "OP780TTUnit", "OP780TTStatus", "OP780TTObjectiveCode", "OP780TTModuleTypeCode", "OP780TTUnc", "OP780TTMDL", "OP780TTVal3", "OP808TTVal", "OP808TTUnit", "OP808TTStatus", "OP808TTObjectiveCode", "OP808TTModuleTypeCode", "OP808TTUnc", "OP808TTMDL", "OP808TTVal3", "OP980TTVal", "OP980TTUnit", "OP980TTStatus", "OP980TTObjectiveCode", "OP980TTModuleTypeCode", "OP980TTUnc", "OP980TTMDL", "OP980TTVal3", "PfVal", "PfUnit", "PfStatus", "PfObjectiveCode", "PfModuleTypeCode", "PfUnc", "PfMDL", "PfVal3", "KfVal", "KfUnit", "KfStatus", "KfObjectiveCode", "KfModuleTypeCode", "KfUnc", "KfMDL", "KfVal3", "RBfVal", "RBfUnit", "RBfStatus", "RBfObjectiveCode", "RBfModuleTypeCode", "RBfUnc", "RBfMDL", "RBfVal3", "SampDurVal", "SampDurUnit", "SampDurStatus", "SampDurObjectiveCode", "SampDurModuleTypeCode", "SampDurUnc", "SampDurMDL", "SampDurVal3", "SeaSaltfVal", "SeaSaltfUnit", "SeaSaltfStatus", "SeaSaltfObjectiveCode", "SeaSaltfModuleTypeCode", "SeaSaltfUnc", "SeaSaltfMDL", "SeaSaltfVal3", "SEfVal", "SEfUnit", "SEfStatus", "SEfObjectiveCode", "SEfModuleTypeCode", "SEfUnc", "SEfMDL", "SEfVal3", "SIfVal", "SIfUnit", "SIfStatus", "SIfObjectiveCode", "SIfModuleTypeCode", "SIfUnc", "SIfMDL", "SIfVal3", "NAfVal", "NAfUnit", "NAfStatus", "NAfObjectiveCode", "NAfModuleTypeCode", "NAfUnc", "NAfMDL", "NAfVal3", "SOILfVal", "SOILfUnit", "SOILfStatus", "SOILfObjectiveCode", "SOILfModuleTypeCode", "SOILfUnc", "SOILfMDL", "SOILfVal3", "SRfVal", "SRfUnit", "SRfStatus", "SRfObjectiveCode", "SRfModuleTypeCode", "SRfUnc", "SRfMDL", "SRfVal3", "SO4fVal", "SO4fUnit", "SO4fStatus", "SO4fObjectiveCode", "SO4fModuleTypeCode", "SO4fUnc", "SO4fMDL", "SO4fVal3", "SfVal", "SfUnit", "SfStatus", "SfObjectiveCode", "SfModuleTypeCode", "SfUnc", "SfMDL", "SfVal3", "SO2Val", "SO2Unit", "SO2Status", "SO2ObjectiveCode", "SO2ModuleTypeCode", "SO2Unc", "SO2MDL", "SO2Val3", "TIfVal", "TIfUnit", "TIfStatus", "TIfObjectiveCode", "TIfModuleTypeCode", "TIfUnc", "TIfMDL", "TIfVal3", "VfVal", "VfUnit", "VfStatus", "VfObjectiveCode", "VfModuleTypeCode", "VfUnc", "VfMDL", "VfVal3", "ZNfVal", "ZNfUnit", "ZNfStatus", "ZNfObjectiveCode", "ZNfModuleTypeCode", "ZNfUnc", "ZNfMDL", "ZNfVal3", "ZRfVal", "ZRfUnit", "ZRfStatus", "ZRfObjectiveCode", "ZRfModuleTypeCode", "ZRfUnc", "ZRfMDL", "ZRfVal3"];
opts.VariableTypes = ["categorical", "double", "double", "datetime", "double", "categorical", "double", "double", "double", "categorical", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "double", "double"];

% Specify file level properties
opts.ExtraColumnsRule = "ignore";
opts.EmptyLineRule = "read";

% Specify variable properties
%opts = setvaropts(opts, ["Dataset", "SiteName", "State", "ALfObjectiveCode", "ALfModuleTypeCode", "NH4fObjectiveCode", "NH4fModuleTypeCode", "ammNO3fObjectiveCode", "ammNO3fModuleTypeCode", "ammSO4fObjectiveCode", "ammSO4fModuleTypeCode", "ASfObjectiveCode", "ASfModuleTypeCode", "BRfObjectiveCode", "BRfModuleTypeCode", "CAfObjectiveCode", "CAfModuleTypeCode", "EC1fObjectiveCode", "EC1fModuleTypeCode", "EC2fObjectiveCode", "EC2fModuleTypeCode", "EC3fObjectiveCode", "EC3fModuleTypeCode", "ECfObjectiveCode", "ECfModuleTypeCode", "OC1fObjectiveCode", "OC1fModuleTypeCode", "OC2fObjectiveCode", "OC2fModuleTypeCode", "OC3fObjectiveCode", "OC3fModuleTypeCode", "OC4fObjectiveCode", "OC4fModuleTypeCode", "OMCfObjectiveCode", "OMCfModuleTypeCode", "OPfObjectiveCode", "OPfModuleTypeCode", "OCfObjectiveCode", "OCfModuleTypeCode", "CHLfObjectiveCode", "CHLfModuleTypeCode", "CLfObjectiveCode", "CLfModuleTypeCode", "CRfObjectiveCode", "CRfModuleTypeCode", "CUfObjectiveCode", "CUfModuleTypeCode", "fAbs_LIPMUnit", "fAbs_LIPMObjectiveCode", "fAbs_LIPMModuleTypeCode", "HfObjectiveCode", "HfModuleTypeCode", "FEfObjectiveCode", "FEfModuleTypeCode", "PBfObjectiveCode", "PBfModuleTypeCode", "MGfObjectiveCode", "MGfModuleTypeCode", "MNfObjectiveCode", "MNfModuleTypeCode", "MTObjectiveCode", "MTModuleTypeCode", "RCTMObjectiveCode", "RCTMModuleTypeCode", "MFObjectiveCode", "MFModuleTypeCode", "CM_calculatedObjectiveCode", "CM_calculatedModuleTypeCode", "RCFMObjectiveCode", "RCFMModuleTypeCode", "MOfObjectiveCode", "MOfModuleTypeCode", "NIfObjectiveCode", "NIfModuleTypeCode", "NO3fObjectiveCode", "NO3fModuleTypeCode", "N2fObjectiveCode", "N2fModuleTypeCode", "PfObjectiveCode", "PfModuleTypeCode", "KfObjectiveCode", "KfModuleTypeCode", "RBfObjectiveCode", "RBfModuleTypeCode", "SeaSaltfObjectiveCode", "SeaSaltfModuleTypeCode", "SEfObjectiveCode", "SEfModuleTypeCode", "SIfObjectiveCode", "SIfModuleTypeCode", "NAfObjectiveCode", "NAfModuleTypeCode", "SOILfObjectiveCode", "SOILfModuleTypeCode", "SRfObjectiveCode", "SRfModuleTypeCode", "SO4fObjectiveCode", "SO4fModuleTypeCode", "SfObjectiveCode", "SfModuleTypeCode", "SO2Status", "SO2ObjectiveCode", "SO2ModuleTypeCode", "TIfObjectiveCode", "TIfModuleTypeCode", "VfObjectiveCode", "VfModuleTypeCode", "ZNfObjectiveCode", "ZNfModuleTypeCode", "ZRfObjectiveCode", "ZRfModuleTypeCode"], "EmptyFieldRule", "auto");
opts = setvaropts(opts, "Date", "InputFormat", "yyyy-MM-dd HH:mm:ss");
%opts = setvaropts(opts, ["SiteCode", "ALfUnit", "ALfStatus", "NH4fUnit", "NH4fStatus", "ammNO3fUnit", "ammNO3fStatus", "ammSO4fUnit", "ammSO4fStatus", "ASfUnit", "ASfStatus", "BRfUnit", "BRfStatus", "CAfUnit", "CAfStatus", "EC1fUnit", "EC1fStatus", "EC2fUnit", "EC2fStatus", "EC3fUnit", "EC3fStatus", "ECfUnit", "ECfStatus", "OC1fUnit", "OC1fStatus", "OC2fUnit", "OC2fStatus", "OC3fUnit", "OC3fStatus", "OC4fUnit", "OC4fStatus", "OMCfUnit", "OMCfStatus", "OPfUnit", "OPfStatus", "OCfUnit", "OCfStatus", "CHLfUnit", "CHLfStatus", "CLfUnit", "CLfStatus", "CRfUnit", "CRfStatus", "CUfUnit", "CUfStatus", "fAbs_LIPMStatus", "HfUnit", "HfStatus", "FEfUnit", "FEfStatus", "PBfUnit", "PBfStatus", "MGfUnit", "MGfStatus", "MNfUnit", "MNfStatus", "MTUnit", "MTStatus", "RCTMUnit", "RCTMStatus", "MFUnit", "MFStatus", "CM_calculatedUnit", "CM_calculatedStatus", "RCFMUnit", "RCFMStatus", "MOfUnit", "MOfStatus", "NIfUnit", "NIfStatus", "NO3fUnit", "NO3fStatus", "N2fUnit", "N2fStatus", "PfUnit", "PfStatus", "KfUnit", "KfStatus", "RBfUnit", "RBfStatus", "SeaSaltfUnit", "SeaSaltfStatus", "SEfUnit", "SEfStatus", "SIfUnit", "SIfStatus", "NAfUnit", "NAfStatus", "SOILfUnit", "SOILfStatus", "SRfUnit", "SRfStatus", "SO4fUnit", "SO4fStatus", "SfUnit", "SfStatus", "SO2Unit", "TIfUnit", "TIfStatus", "VfUnit", "VfStatus", "ZNfUnit", "ZNfStatus", "ZRfUnit", "ZRfStatus"], "TrimNonNumeric", true);
%opts = setvaropts(opts, ["SiteCode", "ALfUnit", "ALfStatus", "NH4fUnit", "NH4fStatus", "ammNO3fUnit", "ammNO3fStatus", "ammSO4fUnit", "ammSO4fStatus", "ASfUnit", "ASfStatus", "BRfUnit", "BRfStatus", "CAfUnit", "CAfStatus", "EC1fUnit", "EC1fStatus", "EC2fUnit", "EC2fStatus", "EC3fUnit", "EC3fStatus", "ECfUnit", "ECfStatus", "OC1fUnit", "OC1fStatus", "OC2fUnit", "OC2fStatus", "OC3fUnit", "OC3fStatus", "OC4fUnit", "OC4fStatus", "OMCfUnit", "OMCfStatus", "OPfUnit", "OPfStatus", "OCfUnit", "OCfStatus", "CHLfUnit", "CHLfStatus", "CLfUnit", "CLfStatus", "CRfUnit", "CRfStatus", "CUfUnit", "CUfStatus", "fAbs_LIPMStatus", "HfUnit", "HfStatus", "FEfUnit", "FEfStatus", "PBfUnit", "PBfStatus", "MGfUnit", "MGfStatus", "MNfUnit", "MNfStatus", "MTUnit", "MTStatus", "RCTMUnit", "RCTMStatus", "MFUnit", "MFStatus", "CM_calculatedUnit", "CM_calculatedStatus", "RCFMUnit", "RCFMStatus", "MOfUnit", "MOfStatus", "NIfUnit", "NIfStatus", "NO3fUnit", "NO3fStatus", "N2fUnit", "N2fStatus", "PfUnit", "PfStatus", "KfUnit", "KfStatus", "RBfUnit", "RBfStatus", "SeaSaltfUnit", "SeaSaltfStatus", "SEfUnit", "SEfStatus", "SIfUnit", "SIfStatus", "NAfUnit", "NAfStatus", "SOILfUnit", "SOILfStatus", "SRfUnit", "SRfStatus", "SO4fUnit", "SO4fStatus", "SfUnit", "SfStatus", "SO2Unit", "TIfUnit", "TIfStatus", "VfUnit", "VfStatus", "ZNfUnit", "ZNfStatus", "ZRfUnit", "ZRfStatus"], "ThousandsSeparator", ",");

% Import the data
IMP = readtable("/Users/DCO/Downloads/dohnemus_20210730_135606_qI0K2.txt", opts);


%% Clear temporary variables
clear opts